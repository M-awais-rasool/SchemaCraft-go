name: Deploy Go Application

on:
  push:
    branches:
      - main
      - deploy-to-ec2

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Source
        uses: actions/checkout@v4
      
      - name: Create .env file
        run: echo "PORT=8080" >> .env
      
      - name: Login to Docker Hub
        run: docker login -u ${{ secrets.DOCKER_USERNAME }} -p ${{ secrets.DOCKER_PASSWORD }}
      
      - name: Build docker image
        run: docker build -t ${{ secrets.DOCKER_USERNAME }}/schemacraft-backend:latest .
      
      - name: Push image to Docker Hub
        run: docker push ${{ secrets.DOCKER_USERNAME }}/schemacraft-backend:latest

  deploy:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Debug connection info
        run: |
          echo "Attempting to connect to host: ${{ secrets.EC2_HOST }}"
          echo "Using username: ${{ secrets.EC2_USER }}"
      
      - name: Test connectivity
        run: |
          timeout 10 nc -zv ${{ secrets.EC2_HOST }} 22 || echo "Cannot reach host on port 22"
      
      - name: Deploy to EC2
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.EC2_SSH_KEY }}
          timeout: 60s
          command_timeout: 300s
          debug: true
          script: |
            # Check if docker is running
            sudo systemctl status docker || sudo systemctl start docker
            
            # Pull latest image
            docker pull ${{ secrets.DOCKER_USERNAME }}/schemacraft-backend:latest
            
            # Stop and remove old container
            docker stop go-app-container || true
            docker rm go-app-container || true
            
            # Run new container
            docker run -d -p 8080:8080 --name go-app-container ${{ secrets.DOCKER_USERNAME }}/schemacraft-backend:latest
            
            # Clean up unused images
            docker image prune -f
            
            # Show running containers for verification
            docker ps